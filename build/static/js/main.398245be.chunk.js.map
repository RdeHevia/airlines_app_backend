{"version":3,"sources":["services/routesAPI.js","reducers/routeReducer.js","components/Routes.js","components/Map.js","reducers/filterReducer.js","reducers/airlineReducer.js","reducers/airportReducer.js","components/Filter.js","App.js","serviceWorker.js","store.js","index.js"],"names":["getAllRoutes","a","fetch","routes","json","getAllAirlines","airlines","map","airline","display","getAllAirports","airports","airport","cache","getAll","Promise","all","routesRAW","airlinesRAW","airportsRAW","getAirlineById","id","idx","length","name","getAirportNameById","code","getAirportCoordinatesById","lat","long","Route","route","airlineName","srcName","destName","ChangePage","handlerPreviousPage","handlerNextPage","sliceStart","sliceEnd","numberOfRoutes","previousDisabled","nextDisabled","className","onClick","disabled","Routes","dispatch","useDispatch","useSelector","state","filteredRoutesIndexes","displayRange","slice","routeIdx","key","event","preventDefault","type","RouteVector","x1","y1","x2","y2","cx","cy","d","Map","viewBox","transform","xlinkHref","href","x","y","height","width","srcLong","srcLat","destLong","destLat","filter","currentFilter","data","findAirportsByAirline","airlineId","forEach","src","dest","findAirlinesByAirport","airportCode","Select","list","handler","valueKey","currentValue","title","value","onChange","item","ClearFilter","Filter","target","airlineAirports","airportAirlines","App","useEffect","JSON","stringify","routeRAW","Boolean","window","location","hostname","match","reducer","combineReducers","action","_","reduce","filteredIndexes","concat","newDisplayRange","num","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.398245be.chunk.js","sourcesContent":["import data from '../data.js';\n\nconst baseUrl = '/api';\n\n// HELPERS\n\nexport const getAllRoutes = async () => {\n  const routes = await fetch(`${baseUrl}/routes`);\n  return routes.json();\n}\n\nexport const getAllAirlines = async () => {\n  const airlines = await (await fetch(`${baseUrl}/airlines`)).json();\n  return airlines.map(airline => {\n    return {...airline, display: true};\n  });\n}\n\nexport const getAllAirports = async () => {\n  const airports = await (await fetch(`${baseUrl}/airports`)).json();\n  return airports.map(airport => {\n    return {...airport, display: true};\n  })\n}\n\nexport let cache = {};\nexport const getAll = async () => {\n  const [routesRAW, airlinesRAW, airportsRAW] = await Promise.all([\n    getAllRoutes(), getAllAirlines(), getAllAirports()\n  ]);\n  cache = { routesRAW, airlinesRAW, airportsRAW }\n  return cache;\n}\n","import { cache, getAll } from '../services/routesAPI';\n\n// HELPERS\nconst getAirlineById = (id, airlines) => {\n  for (let idx = 0; idx < airlines.length; idx++) {\n    let airline = airlines[idx];\n    if (airline.id === id) return airline.name;\n  }\n  return null;\n}\nconst getAirportNameById = (id, airports) => {\n  for (let idx = 0; idx < airports.length; idx++) {\n    let airport = airports[idx];\n    if (airport.code === id) return airport.name;\n  }\n\n  return null;\n}\n\nconst getAirportCoordinatesById = (id, airports) => {\n  for (let idx = 0; idx < airports.length; idx++) {\n    let airport = airports[idx];\n    if (airport.code === id) return [airport.lat, airport.long];\n  }\n  return [null, null];\n}\n\n// ACTION CREATORS\nexport const initializeRoutes = () => {\n  return async dispatch => {\n      const {routesRAW, airlinesRAW, airportsRAW} = \n      JSON.stringify(cache) === '{}' ? await getAll() : cache;\n\n    const routes = routesRAW.map(routeRAW => {\n      const [srcLat, srcLong] = getAirportCoordinatesById(routeRAW.src, airportsRAW);\n      const [destLat, destLong] = getAirportCoordinatesById(routeRAW.dest, airportsRAW);\n      const id = `${routeRAW.airline}-${routeRAW.src}-${routeRAW.dest}`;\n      const route = {\n        ...routeRAW,\n        airlineName: getAirlineById(routeRAW.airline, airlinesRAW),\n        srcName: getAirportNameById(routeRAW.src, airportsRAW),\n        srcLat,\n        srcLong,\n        destName: getAirportNameById(routeRAW.dest, airportsRAW),\n        destLat,\n        destLong,\n        id\n      }\n      return route;\n    });\n\n    dispatch({\n      type: 'INIT_ROUTES',\n      data: routes,\n    });\n  }\n}\n\nexport const nextPage = () => {\n  return {\n    type: 'NEXT_PAGE',\n  }\n}\nexport const previousPage = () => {\n  return {\n    type: 'PREVIOUS_PAGE',\n  }\n}\n\n// REDUCER\nexport const routeReducer = (\n  state = {\n    all: [],\n    filteredRoutesIndexes: [],\n    displayRange: [0, 25]\n  },\n  action\n  ) => {\n  switch (action.type) {\n    case 'INIT_ROUTES': {\n      const filteredRoutesIndexes = action.data.map((_, idx) => idx);\n      const sliceStart = 0;\n      const sliceEnd =\n        25 > filteredRoutesIndexes.length ? filteredRoutesIndexes.length : 25;\n      return {\n        all: action.data,\n        filteredRoutesIndexes,\n        displayRange: [sliceStart, sliceEnd]\n      };\n    }\n    case 'FILTER': {\n      const { airlineId, airportCode } = action.data;\n      const routes = state.all;\n\n      const filteredRoutesIndexes = routes.reduce((filteredIndexes, route, idx) => {\n        if (\n          (route.airline === airlineId || airlineId === \"all\") &&\n          (route.src === airportCode || route.dest === airportCode || airportCode === \"all\")\n        ) {\n          return filteredIndexes.concat(idx);\n        }\n        \n        return filteredIndexes;\n      }, []);\n\n      const sliceStart = 0;\n      const sliceEnd =\n        25 > filteredRoutesIndexes.length ? filteredRoutesIndexes.length : 25;\n    \n      return {\n        ...state,\n        filteredRoutesIndexes,\n        displayRange: [sliceStart, sliceEnd]\n      };\n    }\n    case 'NEXT_PAGE': {\n      const newDisplayRange = state.displayRange.map(num => num + 25);\n      return {...state, displayRange: newDisplayRange}\n    }\n    case 'PREVIOUS_PAGE': {\n      const newDisplayRange = state.displayRange.map(num => num - 25);\n      return {...state, displayRange: newDisplayRange}\n    }\n    default:\n      return state;\n  }\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nextPage, previousPage } from '../reducers/routeReducer';\n\nconst Route = ({ route }) => {\n  return (\n    <tr>\n      <td>{route.airlineName}</td>\n      <td>{route.srcName}</td>\n      <td>{route.destName}</td>\n    </tr>\n  );\n}\n\nconst ChangePage = ({\n  handlerPreviousPage,\n  handlerNextPage,\n  sliceStart,\n  sliceEnd,\n  numberOfRoutes\n}) => {\n\n  const previousDisabled = (sliceStart === 0);\n  const nextDisabled = (sliceEnd === numberOfRoutes);\n\n  return (\n    <div className=\"pagination\">\n      <p>Showing {sliceStart + 1}-{sliceEnd} of {numberOfRoutes} routes.</p>\n      <button onClick={handlerPreviousPage} \n              disabled={previousDisabled}\n      >Previous Page</button>\n      <button  onClick={handlerNextPage} \n               disabled={nextDisabled}\n      >Next Page</button>\n  </div>\n  );\n}\n\nexport const Routes = () => {\n  const dispatch = useDispatch();\n\n  const {all:routes, filteredRoutesIndexes, displayRange} =\n    useSelector(state => state.routes);\n  const numberOfRoutes = filteredRoutesIndexes.length;\n  const sliceStart = displayRange[0];\n  const sliceEnd = displayRange[1];\n\n  const handleNextPage = event => {\n    event.preventDefault();\n    dispatch(nextPage());\n  }\n\n  const handlePreviousPage = event => {\n    event.preventDefault();\n    dispatch(previousPage());\n  }\n  return (\n    <>\n      <table className=\"routes-table\">\n        <thead>\n          <tr>\n            <th>Airline</th>\n            <th>Source Airport</th>\n            <th>Destination Airport</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            filteredRoutesIndexes\n              .slice(sliceStart, sliceEnd)\n              .map(routeIdx => {\n                const route = routes[routeIdx];\n                return <Route key={route.id} route={route} />;\n              })\n          }\n        </tbody>\n      </table>\n      < ChangePage\n        handlerPreviousPage={handlePreviousPage}\n        handlerNextPage={handleNextPage}\n        {...{sliceStart, sliceEnd, numberOfRoutes}}\n      />\n    </>\n  )\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst RouteVector = ({x1, y1, x2, y2}) => {\n  return (\n    <g key=\"\">\n      <circle className=\"source\" cx={x1} cy={y1}>\n        <title></title>\n      </circle> \n      <circle className=\"destination\" cx={x1} cy={y1}>\n        <title></title>\n      </circle>\n      <path d={`M${x1} ${y1} L ${x2} ${y2}`} />\n    </g>\n  )\n}\n\nexport const Map = () => {\n  const { all:routes, filteredRoutesIndexes } =\n    useSelector(state => state.routes);\n\n  return (\n  <svg className=\"map\" viewBox=\"-180 -90 360 180\">\n    <g transform=\"scale(1 -1)\">\n      <image xlinkHref=\"equirectangular_world.jpg\" href=\"equirectangular_world.jpg\" x=\"-180\" y=\"-90\" height=\"100%\" width=\"100%\" transform=\"scale(1 -1)\"/>\n      \n      {filteredRoutesIndexes.map(routeIdx => {\n        const route = routes[routeIdx];\n        return <RouteVector\n          key={route.id}\n          x1={route.srcLong}\n          y1={route.srcLat}\n          x2={route.destLong}\n          y2={route.destLat}\n        />\n      })}\n    </g>\n  </svg>\n  )\n}","// ACTION CREATORS\nexport const filter = currentFilter => {\n  return {\n    type: 'FILTER',\n    data: { ...currentFilter }\n  }\n}\n\n// REDUCER\nexport const filterReducer = (\n  state = {\n    airlineId: \"all\",\n    airportCode: \"all\",\n    airlineAirports: {},\n    airportAirlines: {}\n  },\n  action\n  ) => {\n  switch (action.type) {\n    case 'FILTER':\n      return { ...action.data };\n    default:\n      return { ...state };\n  }\n}","import { cache, getAll } from \"../services/routesAPI\";\n\n// HELPER\nexport const findAirportsByAirline = (airlineId, routesRAW) => {\n  const airports = {};\n  routesRAW.forEach(route => {\n    if (route.airline === airlineId) {\n      airports[route.src] = true;\n      airports[route.dest] = true;\n    }\n  });\n  return airports;\n}\n\n// ACTION CREATOR\nexport const initializAirlines = () => {\n  return async dispatch => {\n      const {routesRAW, airlinesRAW} = \n      JSON.stringify(cache) === '{}' ? await getAll() : cache;\n    const airlines = airlinesRAW.map(airline => {\n      return {\n        ...airline,\n        airports: findAirportsByAirline(airline.id, routesRAW),\n        display: true\n      }\n    });\n\n    dispatch({\n      type: 'INIT_AIRLINES',\n      data: airlines\n    })\n  }\n}\n\n// REDUCER\nexport const airlineReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_AIRLINES':\n      return action.data;\n\n    case 'FILTER':\n      const airlines = state;\n      const { airlineId, airportCode, airportAirlines } = action.data;\n      return airlines.map(airline => {\n        if (\n          (airlineId === \"all\" && airportCode === \"all\") ||\n          (airlineId === \"all\" && airportAirlines[airline.id]) ||\n          (airlineId === airline.id)\n        ) {\n          return {...airline, display: true};\n        } else {\n          return {...airline, display: false};\n        }\n      })\n    default:\n      return state;\n  }\n}","import { cache, getAll } from \"../services/routesAPI\";\n\n// HELPER\nexport const findAirlinesByAirport = (airportCode, routesRAW) => {\n  const airlines = {};\n  routesRAW.forEach(route => {\n    if (route.src === airportCode || route.dest === airportCode) {\n      airlines[route.airline] = true;\n    }\n  });\n  return airlines;\n}\n\n// ACTION CREATOR\nexport const initializeAirports = () => {\n  return async dispatch => {\n    const {routesRAW, airportsRAW} = \n    JSON.stringify(cache) === '{}' ? await getAll() : cache;\n    const airports = airportsRAW.map(airport => {\n      return {\n        ...airport,\n        airlines: findAirlinesByAirport(airport.code, routesRAW),\n        display: true,\n      }\n    });\n\n    dispatch({\n      type: 'INIT_AIRPORTS',\n      data: airports,\n    });\n  }\n}\n\n// REDUCER\nexport const airportReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'INIT_AIRPORTS':\n      return action.data;\n    case 'FILTER':\n      const airports = state;\n      const { airlineId, airportCode, airlineAirports } = action.data;\n      return airports.map(airport => {\n        if (\n          (airlineId === \"all\" && airportCode === \"all\") ||\n          (airlineAirports[airport.code] && airportCode === \"all\") ||\n          (airportCode === airport.code)\n        ) {\n          return {...airport, display: true};\n        } else {\n          return {...airport, display: false};\n        }\n      })\n    default:\n      return state;\n  }\n}","import React from 'react';\nimport { useSelector, useDispatch} from 'react-redux';\nimport { filter } from '../reducers/filterReducer';\nimport { findAirportsByAirline } from '../reducers/airlineReducer';\nimport { findAirlinesByAirport } from '../reducers/airportReducer';\n\nconst Select = ({ list, handler, valueKey, currentValue, title}) => {\n  return (\n  <select value={currentValue} onChange={handler}>\n    <option value=\"all\">{title}</option>\n    {list.map(item => {\n      return (\n      <option key={item[valueKey]} value={item[valueKey]} disabled={!item.display}>\n        {item.name}\n      </option>\n      )\n    })}\n  </select>\n  );\n}\n\nconst ClearFilter = ({ handler, airlineId, airportCode }) => {\n  const disabled = airlineId === \"all\" && airportCode === \"all\";\n  return (\n    <>\n      <button onClick={handler} disabled={disabled}>Show All Routes</button>\n    </>\n  );\n}\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const currentFilter = useSelector(state => state.filter);\n  const routes = useSelector(state => state.routes.all);\n\n\n  const handleAirlineSelection = event => {\n    const airlineId = +event.target.value ? +event.target.value : event.target.value;\n    const airlineAirports = findAirportsByAirline(airlineId, routes);\n\n    dispatch(filter({...currentFilter, airlineId, airlineAirports}));\n  }\n\n  const handleAirportSelection = event => {\n    const airportCode = event.target.value;\n    const airportAirlines = findAirlinesByAirport(airportCode, routes);\n\n    dispatch(filter({...currentFilter, airportCode, airportAirlines}));\n  }\n\n  const handleClearFilter = event => {\n    event.preventDefault();\n    dispatch(filter({\n      ...currentFilter,\n      airlineId: \"all\",\n      airportCode: \"all\"\n    }));\n  }\n\n  return (\n    <p>\n      Show routes on\n      <Select list={useSelector(state => state.airlines)} \n              handler={handleAirlineSelection}\n              valueKey=\"id\"\n              currentValue={useSelector(state => state.filter.airlineId)}\n              title=\"All Airlines\"\n      />\n      flying in or out of\n      <Select list={useSelector(state => state.airports)} \n              handler={handleAirportSelection}\n              valueKey=\"code\"\n              currentValue={useSelector(state => state.filter.airportCode)}\n              title=\"All Airports\"\n      />\n      <ClearFilter handler={handleClearFilter}\n                   airlineId={currentFilter.airlineId}\n                   airportCode={currentFilter.airportCode}\n      />\n    </p>\n  )\n}","import React, { useEffect } from 'react';\nimport './App.css';\nimport data from './data.js'\n// import { nanoid } from 'nanoid'\nimport { Routes } from './components/Routes';\nimport { Map } from './components/Map';\nimport { useDispatch } from 'react-redux';\nimport { initializeRoutes } from './reducers/routeReducer';\nimport { Filter } from './components/Filter';\nimport { initializAirlines } from './reducers/airlineReducer';\nimport { initializeAirports } from './reducers/airportReducer';\n\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(initializeRoutes());\n    dispatch(initializAirlines());\n    dispatch(initializeAirports());\n  }, [dispatch])\n\n  return (\n    <div className=\"app\">\n      <header className=\"header\">\n        <h1 className=\"title\">Airline Routes</h1>\n      </header>\n      <section>\n        <Map />\n        <Filter />\n        <Routes />\n      </section>\n    </div>\n  )\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { airlineReducer } from './reducers/airlineReducer';\nimport { airportReducer } from './reducers/airportReducer';\nimport { routeReducer } from './reducers/routeReducer';\nimport { filterReducer } from './reducers/filterReducer';\n\n\n\nconst reducer = combineReducers({\n  routes: routeReducer,\n  airlines: airlineReducer,\n  airports: airportReducer,\n  filter: filterReducer,\n});\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;","import React from 'react';\nimport { Provider } from 'react-redux'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}